apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: prod
spec:
  selector:
    matchLabels:
      app: mysql
      app.kubernetes.io/name: mysql
  replicas: 3
  serviceName: mysql-svc
  template:
    metadata:
      labels:
        app: mysql
        app.kubernetes.io/name: mysql
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:5.7.34
          command:
          - bash
          - "-c"
          - |
            set -ex
            # Generate mysql server-id from pod ordinal index.
            [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            echo [mysqld] > /mnt/conf.d/server-id.cnf
            # Add an offset to avoid reserved server-id=0 value.
            echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf
            # cp config file to /mnt/conf.d
            if [[ $ordinal -eq 0 ]]; then
              cp /mnt/config-map/master.cnf /mnt/conf.d/
            else
              cp /mnt/config-map/slave.cnf /mnt/conf.d
            fi      
            cp /mnt/config-map/init.sh /mnt/conf.d
          volumeMounts:
          - name: conf
            mountPath: /mnt/conf.d/
          - name: config-map
            mountPath: /mnt/config-map/
      containers:
      - name: mysql
        image: mysql:5.7.34
        volumeMounts:
          - name: conf
            mountPath: /etc/mysql/conf.d
          - name: data
            mountPath: /var/lib/mysql/
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: pass
        - name: REPLIC_USER
          valueFrom:
            secretKeyRef:
              name: mysql
              key: rep_user
        - name: REPLIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: rep_pass
        ports:
        - name: mysql
          containerPort: 3306
        resources:
          requests:
            cpu: "500m"
            memory: "500Mi"
          limits:
            cpu: "500m"
            memory: "500Mi"
        lifecycle:
          postStart:
            exec:
              command: ["bash","/etc/mysql/conf.d/init.sh"]
      volumes:
      - name: config-map
        configMap: 
          name: mysql
      - name: conf
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "nfs"
      resources:
        requests:
          storage: 2Gi

